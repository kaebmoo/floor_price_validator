from sqlalchemy import text
from database import engine, SessionLocal

def migrate():
    """‡πÄ‡∏û‡∏¥‡πà‡∏° columns customer_type ‡πÅ‡∏•‡∏∞ has_fixed_ip"""
    
    print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á migrate database v2...")
    
    try:
        with engine.connect() as conn:
            # ‡πÄ‡∏û‡∏¥‡πà‡∏° customer_type
            try:
                conn.execute(text(
                    "ALTER TABLE price_checks ADD COLUMN customer_type VARCHAR DEFAULT 'residential'"
                ))
                conn.commit()
                print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° column customer_type ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            except Exception as e:
                if "duplicate column" in str(e).lower() or "already exists" in str(e).lower():
                    print("‚ö†Ô∏è  Column customer_type ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
                else:
                    raise
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏° has_fixed_ip
            try:
                conn.execute(text(
                    "ALTER TABLE price_checks ADD COLUMN has_fixed_ip BOOLEAN DEFAULT FALSE"
                ))
                conn.commit()
                print("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° column has_fixed_ip ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            except Exception as e:
                if "duplicate column" in str(e).lower() or "already exists" in str(e).lower():
                    print("‚ö†Ô∏è  Column has_fixed_ip ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
                else:
                    raise
        
        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°
        session = SessionLocal()
        try:
            result = session.execute(text(
                "UPDATE price_checks SET customer_type = 'residential' WHERE customer_type IS NULL"
            ))
            session.commit()
            print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï {result.rowcount} records")
        finally:
            session.close()
        
        print("‚úÖ Migration v2 ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
        
    except Exception as e:
        print(f"‚ùå Migration ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    migrate()